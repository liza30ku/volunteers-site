name: dataspace-todolist

services:
  postgres:
    container_name: postgres-todolist
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data-todolist:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE} -U ${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todolist_network

  keycloak-db:
    container_name: keycloak-db
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d keycloak -U keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todolist_network

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-26.1.2}
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-localhost}
    ports:
      - "${KEYCLOAK_PORT:-8180}:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    volumes:
      - ../examples/todolist/files/todos-realm.json:/opt/keycloak/data/import/realm.json
    networks:
      - todolist_network

  dataspace-builder:
    container_name: dataspace-builder-todolist
    image: gitverse.ru/sbertech/dataspace-builder:1.0.1
    volumes:
      - ../examples/todolist/files:/app/files/resources/src-model
      - dataspace-model-todolist:/app/files/resources/build-model
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todolist_network

  dataspace-app:
    container_name: dataspace-app-todolist
    image: gitverse.ru/sbertech/dataspace-app:1.0.1
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}?currentSchema=${POSTGRES_SCHEMA_NAME}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - dataspace-model-todolist:/app/files/resources/build-model
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/actuator/health/readiness" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      dataspace-builder:
        condition: service_completed_successfully
    networks:
      - todolist_network

volumes:
  postgres-data-todolist:
  dataspace-model-todolist:
  keycloak-db-data:

networks:
  todolist_network:
