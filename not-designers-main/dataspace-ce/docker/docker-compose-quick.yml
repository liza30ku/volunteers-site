name: dataspace-sandbox

services:
  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE} -U ${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dataspace_network

  dataspace-builder:
    container_name: dataspace-builder
    image: gitverse.ru/sbertech/dataspace-builder:1.0.1
    volumes:
      - ../files/resources/src-model:/app/files/resources/src-model
      - dataspace-model:/app/files/resources/build-model
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SCHEMA_NAME: ${POSTGRES_SCHEMA_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dataspace_network

  dataspace-app:
    container_name: dataspace-app
    image: gitverse.ru/sbertech/dataspace-app:1.0.1
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
    volumes:
      - dataspace-model:/app/files/resources/build-model
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health/readiness"]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      dataspace-builder:
        condition: service_completed_successfully
    profiles:
      - ''
      - standalone
    networks:
      - dataspace_network

volumes:
  postgres-data:
  dataspace-model:

networks:
  dataspace_network:
